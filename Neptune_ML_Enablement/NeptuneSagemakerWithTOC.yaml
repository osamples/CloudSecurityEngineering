AWSTemplateFormatVersion: 2010-09-09
Description: A template to deploy basic resources need for Neptune ML quick start
Parameters:
  Env:
    Description: 'Environment tag, e.g. prod, nonprod.'
    Default: 'test'
    Type: String
    AllowedPattern: '[a-z0-9]+'
    MaxLength: 15
  EnableIAMAuthOnExportAPI:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Enable IAM auth on export tool
  EnableIamAuthOnNeptune:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Enable IAM Auth for Neptune.
  DBClusterEndpoint:
    Type: String
    Description: Neptune DB Cluster endpoint
  DBClusterId:
    Type: String
    Description: Neptune DB Cluster identifier
  NeptuneClusterPort:
    Type: String
    Default: '8182'
    Description: Neptune DB Cluster port
  CodeRepoName:
    Type: String
    Description: Unique name of Codecommit Repo
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Neptune VPC
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Public Subnet in Neptune VPC
  PrivateSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Private Subnet in Neptune VPC
  PrivateSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Private Subnet in Neptune VPC
  RootAccess:
    Type: String
    Description: Disable or Enable Root Access
    Default: 'Disabled'
    AllowedValues:
      - 'Enabled'
      - 'Disabled'
  NeptuneSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Neptune VPC Security Group
  NeptuneLoadFromS3RoleArn:
    Type: String
    Description: IAM Role Arn for Bulkload in Neptune
  NeptuneClusterResourceId:
    Description: Neptune cluster resource ID.
    Type: String
  NotebookInstanceType:
    Description: >-
      SageMaker Notebook instance type. Please refer
      https://aws.amazon.com/sagemaker/pricing/ for uptodate allowed instance
      type in aws region and https://aws.amazon.com/neptune/pricing/ for
      pricing.
    Type: String
    Default: 'ml.t3.medium'
    AllowedValues:
      - ml.t2.medium
      - ml.t2.large
      - ml.t2.xlarge
      - ml.t2.2xlarge
      - ml.t3.medium
      - ml.t3.large
      - ml.t3.xlarge
      - ml.t3.2xlarge
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.m5.xlarge
      - ml.m5.2xlarge
      - ml.m5.4xlarge
      - ml.m5.12xlarge
      - ml.m5.24xlarge
      - ml.c4.large
      - ml.c4.xlarge
      - ml.c4.2xlarge
      - ml.c4.4xlarge
      - ml.c4.8xlarge
      - ml.c5.xlarge
      - ml.c5.2xlarge
      - ml.c5.4xlarge
      - ml.c5.9xlarge
      - ml.c5.18xlarge
      - ml.c5d.xlarge
      - ml.c5d.2xlarge
      - ml.c5d.4xlarge
      - ml.c5d.9xlarge
      - ml.c5d.18xlarge
      - ml.p3.2xlarge
      - ml.p3.8xlarge
      - ml.p3.16xlarge
      - ml.p2.2xlarge
      - ml.p2.8xlarge
      - ml.p2.16xlarge
    ConstraintDescription: Must be a valid SageMaker instance type.
  NeptuneMLIAMRoleArn:
    Description: >-
      OPTIONAL: ARN of the IAM Role that allows Amazon Neptune to access ML
      resources.
    Type: String
  NeptuneExportApiUri:
    Description: 'OPTIONAL: Neptune-Export API URI'
    Type: String
  CustomPolicyArn:
    Description: 'OPTIONAL: Custom managed policy ARN.'
    Type: String
  InitialCommitBucket:
    Type: String
    Description: S3 Bucket Arn that contains your Initial zip file
  InitialCommitZip:
    Type: String
    Description: Initial zip file name for your codecommit repo. Do not include the '.zip' of the name. 
Conditions:
  AddNeptuneClientSecurityGroup: !Not 
    - !Equals 
      - !Ref NeptuneSecurityGroup
      - ''
  AddCustomPolicy: !Not 
    - !Equals 
      - !Ref CustomPolicyArn
      - ''
  EnableIAMAuth: !Equals 
    - !Ref EnableIamAuthOnNeptune
    - 'true'
  ValidNeptuneMLIAMRoleArn: !Not 
    - !Equals 
      - !Ref NeptuneMLIAMRoleArn
      - ''
Resources:
  CRGMLDataSetCommit:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: Contains the code artifacts for CRG's Machine Learning effort in Sagemaker - Managed by CloudFormation
      RepositoryName: !Ref CodeRepoName
      Code:
        S3:
          Bucket: !Ref InitialCommitBucket
          Key: !Sub '${InitialCommitZip}.zip'
      Tags:
        -
          Key: OrgID
          Value: '00410'
        -
          Key: Capacity
          Value: BAU
        -
          Key: Contact
          Value: DL-InfoSecEngineering@ihsmarkit.com
        -
          Key: Service
          Value: GlobalCloudSecurity
        -
          Key: Environment
          Value: !Ref Env
  CodeRepository:
    Type: AWS::SageMaker::CodeRepository
    Properties: 
      CodeRepositoryName: !Sub '${CodeRepoName}-Sagemaker'
      GitConfig: 
          RepositoryUrl: !GetAtt CRGMLDataSetCommit.CloneUrlHttp
      Tags:
        -
          Key: OrgID
          Value: '00410'
        -
          Key: Capacity
          Value: BAU
        -
          Key: Contact
          Value: DL-InfoSecEngineering@ihsmarkit.com
        -
          Key: Service
          Value: GlobalCloudSecurity
        -
          Key: Environment
          Value: !Ref Env
    DependsOn: CRGMLDataSetCommit
  SageMakerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow Access
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub Neptune
        - Key: StackId
          Value: !Sub '${AWS::StackId}'
        - Key: Stack
          Value: !Sub '${AWS::Region}-${AWS::StackName}'
        - Key: Application
          Value: NeptuneCloudformation
  NeptuneNotebookInstance:
    Type: 'AWS::SageMaker::NotebookInstance'
    Properties:
      InstanceType: !Ref NotebookInstanceType
      NotebookInstanceName: !Join 
        - ''
        - - aws-neptune-
          - !Select 
            - '0'
            - !Split 
              - '-'
              - !Ref 'AWS::StackName'
          - '-'
          - !Ref Env
      SubnetId: !Ref PublicSubnet1
      RootAccess: !Ref RootAccess
      DefaultCodeRepository: !GetAtt CodeRepository.CodeRepositoryName
      SecurityGroupIds: !If 
        - AddNeptuneClientSecurityGroup
        - - !Ref NeptuneSecurityGroup
        - - !GetAtt 
            - SageMakerSecurityGroup
            - GroupId
      RoleArn: !GetAtt 
        - ExecutionRole
        - Arn
      LifecycleConfigName: !GetAtt 
        - NeptuneNotebookInstanceLifecycleConfig
        - NotebookInstanceLifecycleConfigName
      Tags:
        - Key: Name
          Value: !Sub 'Neptune-${Env}'
        - Key: StackId
          Value: !Sub '${AWS::StackId}'
        - Key: Stack
          Value: !Sub '${AWS::Region}-${AWS::StackName}'
        - Key: Application
          Value: NeptuneCloudformation
        - Key: aws-neptune-cluster-id
          Value: !Ref DBClusterId
        - Key: aws-neptune-resource-id
          Value: !Ref NeptuneClusterResourceId
    DependsOn: 
      - CodeRepository
      - NeptuneNotebookInstanceLifecycleConfig
  NeptuneNotebookInstanceLifecycleConfig:
    Type: 'AWS::SageMaker::NotebookInstanceLifecycleConfig'
    Properties:
      OnStart:
        - Content: !Base64 
            'Fn::Join':
              - ''
              - - |
                  #!/bin/bash
                - |+
                  sudo -u ec2-user -i <<'EOF'

                - !If 
                  - EnableIAMAuth
                  - |
                    echo "export GRAPH_NOTEBOOK_AUTH_MODE=IAM" >> ~/.bashrc
                  - |
                    echo "export GRAPH_NOTEBOOK_AUTH_MODE=DEFAULT" >> ~/.bashrc
                - |
                  echo "export GRAPH_NOTEBOOK_IAM_PROVIDER=ROLE" >> ~/.bashrc
                - |
                  echo "export GRAPH_NOTEBOOK_SSL=True" >> ~/.bashrc
                - echo "export GRAPH_NOTEBOOK_HOST=
                - !Ref DBClusterEndpoint
                - |
                  " >> ~/.bashrc
                - echo "export GRAPH_NOTEBOOK_PORT=
                - !Ref NeptuneClusterPort
                - |
                  " >> ~/.bashrc
                - echo "export NEPTUNE_LOAD_FROM_S3_ROLE_ARN=
                - !Ref NeptuneLoadFromS3RoleArn
                - |
                  " >> ~/.bashrc
                - echo "export AWS_REGION=
                - !Ref 'AWS::Region'
                - |+
                  " >> ~/.bashrc

                - echo "export NEPTUNE_ML_ROLE_ARN=
                - !Ref NeptuneMLIAMRoleArn 
                - |+
                  " >> ~/.bashrc

                - echo "export NEPTUNE_EXPORT_API_URI=
                - !Ref NeptuneExportApiUri
                - |+
                  " >> ~/.bashrc

                - >
                  aws s3 cp s3://aws-neptune-notebook/graph_notebook.tar.gz
                  /tmp/graph_notebook.tar.gz
                - |
                  rm -rf /tmp/graph_notebook
                - |
                  tar -zxvf /tmp/graph_notebook.tar.gz -C /tmp
                - |+
                  /tmp/graph_notebook/install.sh

                - >
                  aws s3 cp --recursive s3://aws-neptune-customer-samples/v2/notebooks/ ~/SageMaker/Neptune 
                - |+
                  chmod -R a+rw ~/SageMaker/Neptune/* 
                - |+

                - >
                  source activate JupyterSystemEnv
                - |
                  pip install --upgrade ipython==7.16.1
                - |
                  source /home/ec2-user/anaconda3/bin/deactivate
                - |+

                - >
                  echo "Install jupyter nbextension"
                - |
                  source /home/ec2-user/anaconda3/bin/activate JupyterSystemEnv
                - |
                  pip install jupyter_contrib_nbextensions
                - |
                  jupyter contrib nbextensions install --user
                - |+
 
                - >
                  echo "Restarting jupyter notebook server"
                - |
                  pkill -f jupyter-notebook
                - |+
 
                - >
                  echo "Finished running onStart script"
                - |+

                - EOF
    DependsOn:
     - NeptuneExport
     - NeptuneML
  ExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns: !If 
        - AddCustomPolicy
        - - !Ref CustomPolicyArn
        - !Ref 'AWS::NoValue'
      Policies:
        - PolicyName: SagemakerNotebookNeptunePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:GitPull'
                  - 'codecommit:GitPush'
                Resource: !GetAtt CRGMLDataSetCommit.Arn
              - Effect: Allow
                Action:
                  - 'cloudwatch:PutMetricData'
                Resource: !Sub >-
                  arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                  - 'logs:GetLogEvents'
                Resource: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*'
              - Effect: Allow
                Action: 'neptune-db:connect'
                Resource: !Sub >-
                  arn:${AWS::Partition}:neptune-db:${AWS::Region}:${AWS::AccountId}:${NeptuneClusterResourceId}/*
              - Effect: Allow
                Action:
                  - 's3:Put*'
                  - 's3:Get*'
                  - 's3:List*'
                Resource: !Sub 'arn:${AWS::Partition}:s3:::*'
              - Effect: Allow
                Action: 'execute-api:Invoke'
                Resource: !Sub >-
                  arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:*/*
              - Effect: Allow
                Action:
                  - 'sagemaker:CreateModel'
                  - 'sagemaker:CreateEndpointConfig'
                  - 'sagemaker:CreateEndpoint'
                  - 'sagemaker:DescribeModel'
                  - 'sagemaker:DescribeEndpointConfig'
                  - 'sagemaker:DescribeEndpoint'
                  - 'sagemaker:DeleteModel'
                  - 'sagemaker:DeleteEndpointConfig'
                  - 'sagemaker:DeleteEndpoint'
                Resource: !Sub >-
                  arn:${AWS::Partition}:sagemaker:${AWS::Region}:${AWS::AccountId}:*/*
              - !If 
                - ValidNeptuneMLIAMRoleArn
                - Action:
                    - 'iam:PassRole'
                  Resource: !GetAtt 
                    - NeptuneML
                    - Outputs.NeptuneMLIAMRoleArn
                  Effect: Allow
                - !Ref 'AWS::NoValue'
  NeptuneExport:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Join 
        - ''
        - - >-
            https://s3.amazonaws.com/aws-neptune-customer-samples/neptune-export/install/cloudformation-templates/neptune-export-service.json
      TimeoutInMinutes: '30'
      Parameters:
        Subnet1: !Ref PrivateSubnet1
        Subnet2: !Ref PrivateSubnet2
        VPC: !Ref VPC
        EnableIAM: !Ref EnableIAMAuthOnExportAPI
  NeptuneML:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Join 
        - ''
        - - >-
            https://s3.amazonaws.com/aws-neptune-customer-samples/v2/cloudformation-templates/neptune-ml-base-stack.json
      TimeoutInMinutes: '30'
      Parameters:
        DBClusterId: !Ref DBClusterId
        Subnet1: !Ref PrivateSubnet1
        Subnet2: !Ref PrivateSubnet2
        VPC: !Ref VPC
        NeptuneSecurityGroup: !Ref NeptuneSecurityGroup
        NeptuneExportSecurityGroup: !GetAtt 
          - NeptuneExport
          - Outputs.NeptuneExportSecurityGroup
        NeptuneLoadFromS3RoleArn: !Ref NeptuneLoadFromS3RoleArn
Outputs:
  NeptuneNotebookInstanceId:
    Value: !Ref NeptuneNotebookInstance
  NeptuneSagemakerNotebook:
    Value: !Join 
      - ''
      - - 'https://'
        - !Select 
          - 1
          - !Split 
            - /
            - !Ref NeptuneNotebookInstance
        - .notebook.
        - !Ref 'AWS::Region'
        - .sagemaker.aws/
  NeptuneNotebookInstanceLifecycleConfigId:
    Value: !Ref NeptuneNotebookInstanceLifecycleConfig
  NeptuneMLIAMRole:
    Description: Neptune ML IAM role
    Value: !GetAtt 
      - NeptuneML
      - Outputs.NeptuneMLIAMRole
  NeptuneMLIAMRoleArn:
    Description: Neptune ML IAM role arn
    Value: !GetAtt 
      - NeptuneML
      - Outputs.NeptuneMLIAMRoleArn
  StartNeptuneExportCommand:
    Description: API command to start Neptune-Export job
    Value: !GetAtt 
      - NeptuneExport
      - Outputs.StartNeptuneExportCommand
  NeptuneExportStatusCommand:
    Description: API command to get status of a Neptune-Export job
    Value: !GetAtt 
      - NeptuneExport
      - Outputs.NeptuneExportStatusCommand
  NeptuneExportSecurityGroup:
    Description: Neptune-Export Security Group
    Value: !GetAtt 
      - NeptuneExport
      - Outputs.NeptuneExportSecurityGroup
  NeptuneExportApiUri:
    Description: Neptune-Export API URI
    Value: !GetAtt 
      - NeptuneExport
      - Outputs.NeptuneExportApiUri
